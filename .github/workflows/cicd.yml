name: CI/CD Pipeline

on:
  push:
    branches:
      - v2/dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # GitHub Actions 캐시 강제 삭제
      - name: Remove GitHub Actions cache
        run: |
          rm -rf ~/.gradle/caches
          rm -rf ~/.gradle/wrapper
          rm -rf ~/.gradle/daemon
          rm -rf ~/.gradle/native
          rm -rf ~/.gradle/task-cache
          
      # 1. 코드 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. 자바 다운로드
      - name: Set up JDK 21 (Amazon Corretto)
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'corretto'  # Amazon Corretto 배포판을 사용
          java-package: jdk
          check-latest: false

      # 2. keystore.p12 파일 복원
      - name: Restore keystore.p12 from GitHub Secrets
        run: |
          echo "${{ secrets.KEYSTORE }}" | base64 --decode > ./keystore.p12

      # 3. ENV 파일 복원
      - name: Restore .env from GitHub Secrets
        run: |
          echo "${{ secrets.ENV }}" > ./.env

      # 3. Gradle 실행 파일에 권한 부여
      - name: Grant execute permission for Gradle
        run: chmod +x ./gradlew

      # 4. Gradle 빌드
      - name: Build with Gradle
        run: ./gradlew clean build -x test --no-daemon --refresh-dependencies

      # 5. Docker 로그인
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Docker Hub 사용자명
          password: ${{ secrets.DOCKER_PASSWORD }}  # Docker Hub 비밀번호 또는 액세스 토큰

      # 6. Docker 이미지 빌드 및 푸시
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ksngh/caufencing:latest
          no-cache: true

  deploy:
    runs-on: ubuntu-latest
    needs: build

    # 도커 컴포즈 할 수 있는 환경으로 바꿔두기
    # echo "${{ secrets.KEYSTORE }}" | base64 --decode > ./keystore.p12
    steps:
      - name: SSH and deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            sudo docker stop caufencing-vote-app || true
            sudo docker rm caufencing-vote-app || true
            sudo docker rmi ksngh/caufencing:latest || true
            sudo docker pull ksngh/caufencing:latest
            echo "${{ secrets.ENV }}" > ./.env
            sudo docker-compose --project-name caufencing up
            exit 0
